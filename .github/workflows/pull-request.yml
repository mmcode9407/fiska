name: Pull Request Workflow

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Lint code
        run: npm run lint

  unit-test:
    name: Unit Tests
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests with coverage
        run: npm run test:coverage

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-coverage
          path: ./coverage/
          retention-days: 7

  e2e-test:
    name: E2E Tests
    needs: lint
    runs-on: ubuntu-latest
    environment: integration
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: Run E2E tests
        run: npm run test:e2e
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
          E2E_USERNAME: ${{ secrets.E2E_USERNAME }}
          E2E_PASSWORD: ${{ secrets.E2E_PASSWORD }}

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: ./playwright-report/
          retention-days: 7

  status-comment:
    name: Status Comment
    needs: [lint, unit-test, e2e-test]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get PR details
        id: pr_details
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const pr_number = context.issue.number;
            return { owner, repo, pr_number };

      - name: Download unit test coverage
        uses: actions/download-artifact@v4
        with:
          name: unit-test-coverage
          path: ./coverage

      - name: Download E2E report
        uses: actions/download-artifact@v4
        with:
          name: playwright-report
          path: ./playwright-report

      - name: Create success comment
        if: needs.lint.result == 'success' && needs.unit-test.result == 'success' && needs.e2e-test.result == 'success'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo, pr_number } = ${{ steps.pr_details.outputs.result }};

            let statusComment = '## Status PR\n\n';
            statusComment += '| Test | Status |\n';
            statusComment += '|------|--------|\n';
            statusComment += `| Linting | :white_check_mark: Passed |\n`;
            statusComment += '| Unit Tests | :white_check_mark: Passed |\n';
            statusComment += '| E2E Tests | :white_check_mark: Passed |\n\n';
            statusComment += '### :rocket: Wszystkie testy przeszły pomyślnie!';

            github.rest.issues.createComment({
              owner: owner,
              repo: repo,
              issue_number: pr_number,
              body: statusComment
            });

      - name: Create failure comment
        if: needs.lint.result != 'success' || needs.unit-test.result != 'success' || needs.e2e-test.result != 'success'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo, pr_number } = ${{ steps.pr_details.outputs.result }};
            const lintStatus = "${{ needs.lint.result }}" === "success" ? "✅" : "❌";
            const unitStatus = "${{ needs.unit-test.result }}" === "success" ? "✅" : "❌";
            const e2eStatus = "${{ needs.e2e-test.result }}" === "success" ? "✅" : "❌";

            let statusComment = '## Status PR\n\n';
            statusComment += '| Test | Status |\n';
            statusComment += '|------|--------|\n';
            statusComment += `| Linting | ${lintStatus} |\n`;
            statusComment += `| Unit Tests | ${unitStatus} |\n`;
            statusComment += `| E2E Tests | ${e2eStatus} |\n\n`;
            statusComment += '### :warning: Niektóre testy nie przeszły. Szczegóły powyżej.';

            github.rest.issues.createComment({
              owner: owner,
              repo: repo,
              issue_number: pr_number,
              body: statusComment
            });
