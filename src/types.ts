import type { Database } from "./db/database.types";

// Alias for rows of the tables from the database
export type Flashcard = Database["public"]["Tables"]["flashcards"]["Row"];
export type Generation = Database["public"]["Tables"]["generations"]["Row"];
export type GenerationErrorLog = Database["public"]["Tables"]["generation_error_logs"]["Row"];

// DTO representing a flashcard as returned by GET endpoints (/api/flashcards, /api/flashcards/{id})
// This type is derived from the database flashcards "Row" type,
// including only the fields required by the API.
export type FlashcardDTO = Pick<
  Flashcard,
  "id" | "front" | "back" | "source" | "generation_id" | "created_at" | "updated_at"
>;

// DTO for pagination information used in list responses (GET /api/flashcards)
export interface PaginationDTO {
  page: number;
  limit: number;
  total: number;
}

// DTO for the response of GET /api/flashcards including flashcards list and pagination details.
export interface GetFlashcardsResponseDTO {
  data: FlashcardDTO[];
  pagination: PaginationDTO;
}

// Unified Command Model and DTO for creating a flashcard (POST /api/flashcards)
// This model is used for both manual and AI generated flashcards.
// For AI flashcards, generation_id is required, while for manual flashcards it should be null.
export type Source = "manual" | "ai-full" | "ai-edited";

export interface CreateFlashcardDTO {
  front: string;
  back: string;
  source: Source;
  generation_id: number | null;
}

export interface CreateFlashcardCommand {
  flashcards: CreateFlashcardDTO[];
}

// DTO for updating an existing flashcard (PUT /api/flashcards/{id})
export interface UpdateFlashcardDTO {
  front: string;
  back: string;
  source: Source;
  generation_id: number | null;
}

// DTO representing a generation event derived directly from the database "generations" table.
// Used in GET /api/generations and GET /api/generations/{id} endpoints.
export type GenerationDTO = Generation;

// DTO representing a generation error log based on the database "generation_error_logs" table.
// Used in GET /api/generation-error-logs.
export type GenerationErrorLogDTO = GenerationErrorLog;

// DTO for a flashcard proposal generated by AI during the generation process.
// In this application, proposals are typically marked as "ai-full".
export interface FlashcardProposalDTO {
  front: string;
  back: string;
  source: "ai-full"; // proposals are generated with source "ai-full"
}

// DTO representing the overall response of the POST /api/generations endpoint,
// Contains the generation id, the proposed flashcards, and the generated count.
export interface GenerationCreateResponseDTO {
  generation_id: number;
  flashcards_proposals: FlashcardProposalDTO[];
  generated_count: number;
}

// Command Model for generating flashcards via AI (POST /api/generations).
// Contains the source text to be used for flashcard generation (length between 1000 and 10000 characters).
export interface GenerateFlashcardsCommand {
  source_text: string;
}
